// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/greymatter-io/gm-control/control-api/api

package api

// CircuitBreakers provides limits on various parameters to protect clusters
// against sudden surges in traffic.
#CircuitBreakers: {
	// MaxConnections is the maximum number of connections that will be
	// established to all instances in a cluster within a proxy.
	// If set to 0, no new connections will be created. If not specified,
	// defaults to 1024.
	max_connections?: null | int @go(MaxConnections,*int)

	// MaxPendingRequests is the maximum number of requests that will be
	// queued while waiting on a connection pool to a cluster within a proxy.
	// If set to 0, no requests will be queued. If not specified,
	// defaults to 1024.
	max_pending_requests?: null | int @go(MaxPendingRequests,*int)

	// MaxRequests is the maximum number of requests that can be outstanding
	// to all instances in a cluster within a proxy. Only applicable to
	// HTTP/2 traffic since HTTP/1.1 clusters are governed by the maximum
	// connections circuit breaker. If set to 0, no requests will be made.
	// If not specified, defaults to 1024.
	max_requests?: null | int @go(MaxRequests,*int)

	// MaxRetries is the maximum number of retries that can be outstanding
	// to all instances in a cluster within a proxy. If set to 0, requests
	// will not be retried. If not specified, defaults to 3.
	max_retries?: null | int @go(MaxRetries,*int)

	// MaxConnectionPools is the maximum number of connection pools per cluster
	// that Envoy will concurrently support at once. If not specified, the
	// default is unlimited. Set this for clusters which create a large number
	// of connection pools.
	max_connection_pools?: null | int @go(MaxConnectionPools,*int)

	// TrackRemaining enables the publishing of stats that expose the number of
	// resources remaining until the circuit breakers open. If not specified,
	// the default is false.
	track_remaining?: bool @go(TrackRemaining)
}

// CircuitBreakersThresholds stores CircuitBreakers configurations for
// Default and High routing priorities. The Default CircuitBreakers
// configuration (see CircuitBreakers) is required.
// Note: To avoid a breaking change, the Default fields stay at the first level
#CircuitBreakersThresholds: {
	max_connections?:      null | int              @go(MaxConnections,*int)
	max_pending_requests?: null | int              @go(MaxPendingRequests,*int)
	max_requests?:         null | int              @go(MaxRequests,*int)
	max_retries?:          null | int              @go(MaxRetries,*int)
	max_connection_pools?: null | int              @go(MaxConnectionPools,*int)
	track_remaining?:      bool                    @go(TrackRemaining)
	high?:                 null | #CircuitBreakers @go(High,*CircuitBreakers)
}
